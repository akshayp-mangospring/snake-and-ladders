var ce=Object.defineProperty;var me=(r,e,t)=>e in r?ce(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var f=(r,e,t)=>(me(r,typeof e!="symbol"?e+"":e,t),t),Z=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var a=(r,e,t)=>(Z(r,e,"read from private field"),t?t.call(r):e.get(r)),n=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)},m=(r,e,t,s)=>(Z(r,e,"write to private field"),s?s.call(r,t):e.set(r,t),t);var _=(r,e,t,s)=>({set _(o){m(r,e,o,t)},get _(){return a(r,e,s)}}),c=(r,e,t)=>(Z(r,e,"access private method"),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const l of o)if(l.type==="childList")for(const u of l.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function t(o){const l={};return o.integrity&&(l.integrity=o.integrity),o.referrerPolicy&&(l.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?l.credentials="include":o.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function s(o){if(o.ep)return;o.ep=!0;const l=t(o);fetch(o.href,l)}})();class W{}f(W,"availableBoards",{classic:{uiSpecs:{rowSize:10,rowCount:10,nodeSizeInPx:61,verticalOffsetInPx:11,horizontalOffsetInPx:19},snakesList:[{head:40,tail:3},{head:43,tail:18},{head:27,tail:5},{head:54,tail:31},{head:66,tail:45},{head:76,tail:58},{head:89,tail:53},{head:99,tail:41}],laddersList:[{bottom:4,top:25},{bottom:13,top:46},{bottom:33,top:49},{bottom:42,top:63},{bottom:50,top:69},{bottom:62,top:81},{bottom:74,top:92}]},rockets:{uiSpecs:{rowSize:10,rowCount:10,nodeSizeInPx:61,verticalOffsetInPx:10,horizontalOffsetInPx:16},snakesList:[{head:43,tail:17},{head:50,tail:5},{head:56,tail:8},{head:73,tail:15},{head:84,tail:58},{head:87,tail:49},{head:98,tail:40}],laddersList:[{bottom:2,top:23},{bottom:4,top:68},{bottom:6,top:45},{bottom:20,top:59},{bottom:30,top:96},{bottom:52,top:72},{bottom:57,top:96},{bottom:71,top:92}]},dragons:{uiSpecs:{rowSize:10,rowCount:10,nodeSizeInPx:60,verticalOffsetInPx:11,horizontalOffsetInPx:19},snakesList:[{head:30,tail:16},{head:37,tail:3},{head:56,tail:8},{head:84,tail:64},{head:87,tail:31},{head:99,tail:40}],laddersList:[{bottom:2,top:23},{bottom:6,top:45},{bottom:20,top:59},{bottom:52,top:72},{bottom:57,top:96},{bottom:74,top:94},{bottom:78,top:98}]}}),f(W,"dieRollsHtml",{0:"<div></div>",1:'<div class="dice first-face"><span class="dot"></span></div>',2:'<div class="dice second-face"><span class="dot"></span><span class="dot"></span></div>',3:'<div class="dice third-face"><span class="dot"></span><span class="dot"></span><span class="dot"></span></div>',4:'<div class="fourth-face dice"><div class="dice-column"><span class="dot"></span><span class="dot"></span></div><div class="dice-column"><span class="dot"></span><span class="dot"></span></div></div>',5:'<div class="fifth-face dice"><div class="dice-column"><span class="dot"></span><span class="dot"></span></div><div class="dice-column"><span class="dot"></span></div><div class="dice-column"><span class="dot"></span><span class="dot"></span></div></div>',6:'<div class="sixth-face dice"><div class="dice-column"><span class="dot"></span><span class="dot"></span><span class="dot"></span></div><div class="dice-column"><span class="dot"></span><span class="dot"></span><span class="dot"></span></div></div>'});class i{static htmlElemFromString(e){return new DOMParser().parseFromString(e,"text/html").body.firstChild}static capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}static shuffleArray(e){e.sort(()=>Math.random()-.5)}static isSpacebarPressed(e){return e.keyCode===this.spacebarKeyCode}static isEnterPressed(e){return e.keyCode===this.enterKeyCode}}f(i,"spacebarKeyCode",32),f(i,"enterKeyCode",13),f(i,"removeFirstChar",e=>e.substring(1)),f(i,"sleep",e=>new Promise(t=>setTimeout(t,e))),f(i,"padToTwoDigits",e=>`0${e}`.slice(-2));class S{static getDiceFaceHtml(e){return W.dieRollsHtml[e]}static showCurrentDiceRoll(e){const t=document.getElementById("current-dice-roll");t.classList.remove("is-hidden"),t.innerHTML=S.getDiceFaceHtml(e)}static resetCurrentDiceRoll(){const e=document.getElementById("current-dice-roll");e.innerHTML=S.getDiceFaceHtml(0)}rollDice(){return Math.floor(Math.random()*6)+1}}class p{static addLoggerEntry(e){const t=new Date,s=t.getHours()>12?"PM":"AM",o=t.getHours()%12===0?12:t.getHours()%12,l=`${i.padToTwoDigits(o)}:${i.padToTwoDigits(t.getMinutes())}:${i.padToTwoDigits(t.getSeconds())} ${s}`,u=document.getElementById("logger"),y=i.htmlElemFromString(`<div class="is-family-code mb-3"><p class="is-flex is-justify-content-space-between is-align-items-baseline has-text-weight-semibold has-text-grey"><span>Bot</span><span class="is-size-7">${l}<span></p><p>${e}</p><hr class="m-1"></div>`);u.appendChild(y),u.scrollTop=u.scrollHeight}}class w{static showCurrentTurnText(){document.getElementById("current-player-turn").textContent=`${d.currentPlayerDisplayName}'s turn`}}f(w,"disableControls",!1),f(w,"showGameWinner",()=>{document.getElementById("game-won-wrapper").classList.remove("is-hidden"),document.getElementById("game-winner-name").textContent=`${d.currentPlayerDisplayName}`,document.getElementById("bottom-game-summary").innerHTML=document.getElementById("player-colors").innerHTML});var P,k,$,T,B,j,te,U,se,Y,ae,q,re,J,oe,Q,ne;const h=class h{constructor(e,t,s){n(this,j);n(this,U);n(this,Y);n(this,q);n(this,J);n(this,Q);n(this,P,void 0);n(this,k,void 0);n(this,$,void 0);n(this,T,void 0);n(this,B,void 0);m(this,$,e),m(this,P,W.availableBoards[t]),m(this,k,t),m(this,B,s.slice(0,a(this,$))),m(this,T,[{hexColor:"#ffd54f",readableColor:"Yellow"},{hexColor:"#9fa9db",readableColor:"Gray"},{hexColor:"#a4d7a7",readableColor:"Green"},{hexColor:"#ef9b9b",readableColor:"Pink"}]),c(this,j,te).call(this),c(this,U,se).call(this),c(this,Y,ae).call(this),c(this,q,re).call(this),c(this,J,oe).call(this),c(this,Q,ne).call(this),p.addLoggerEntry("Game is ready to be played"),p.addLoggerEntry(`${h.currentPlayerDisplayName}'s turn, ${h.currentPlayerDisplayName} can roll the die`)}static get currentPlayerDisplayName(){return i.capitalize(h.currentPlayer.playerName)}get dice(){return new S}get nodes(){return h.nodes}get players(){return h.players}};P=new WeakMap,k=new WeakMap,$=new WeakMap,T=new WeakMap,B=new WeakMap,j=new WeakSet,te=function(){document.getElementById("game-board-img").src=`./assets/${a(this,k)}.jpg`,p.addLoggerEntry("Initialized Board Image")},U=new WeakSet,se=function(){const{rowSize:e,rowCount:t}=a(this,P).uiSpecs;for(var s=0;s<e*t;s++)h.nodes.push(new ue);p.addLoggerEntry("Initialized Nodes")},Y=new WeakSet,ae=function(){a(this,P).snakesList.forEach(e=>{const{head:t,tail:s}=e;h.nodes[t-1].setSnake(new ie(t,s))}),p.addLoggerEntry("Initialized Snakes")},q=new WeakSet,re=function(){a(this,P).laddersList.forEach(e=>{const{top:t,bottom:s}=e;h.nodes[s-1].setLadder(new le(t,s))}),p.addLoggerEntry("Initialized Ladders")},J=new WeakSet,oe=function(){const e=document.getElementById("player-colors");i.shuffleArray(a(this,T)),i.shuffleArray(a(this,B));for(let t=0;t<a(this,$);t++){const{hexColor:s,readableColor:o}=a(this,T)[t],l=i.removeFirstChar(s),u=a(this,B)[t],y=i.htmlElemFromString(`<div id="${l}-player" class="player ${l}-player" style="color: ${s};"><i class="fas fa-chess-pawn"></i></div>`);h.players.push(new pe(l,0,a(this,P).uiSpecs,u)),document.getElementById("initial-spacer-div").appendChild(y),e.appendChild(i.htmlElemFromString(`<p><span class="has-text-weight-semibold">${u}</span> - ${o}, @<span id="${l}-position">0</span></p>`))}p.addLoggerEntry("Initialized Players"),h.currentPlayer=h.players[0],w.showCurrentTurnText()},Q=new WeakSet,ne=function(){const e=document.getElementById("time-passed");let t=0;const s=60;setInterval(()=>{t<s?e.innerHTML=`00:${i.padToTwoDigits(t)}`:e.innerHTML=`${i.padToTwoDigits(Math.floor(t/s))}:${i.padToTwoDigits(t%s)}`,t++},1e3),p.addLoggerEntry("Initialized Timer")},f(h,"currentPlayer",null),f(h,"players",[]),f(h,"nodes",[]);let d=h;var C,x;class ue{constructor(){n(this,C,void 0);n(this,x,void 0);m(this,C,new ie(null,null)),m(this,x,new le(null,null))}get snake(){return a(this,C)}setSnake(e){m(this,C,e)}get ladder(){return a(this,x)}setLadder(e){m(this,x,e)}hasSnakeHead(){return!!a(this,C).head}hasLadderBottom(){return!!a(this,x).bottom}}C=new WeakMap,x=new WeakMap;var M,H;class ie{constructor(e,t){n(this,M,void 0);n(this,H,void 0);m(this,M,e),m(this,H,t)}get head(){return a(this,M)}get tail(){return a(this,H)}}M=new WeakMap,H=new WeakMap;var O,F;class le{constructor(e,t){n(this,O,void 0);n(this,F,void 0);m(this,O,e),m(this,F,t)}get top(){return a(this,O)}get bottom(){return a(this,F)}}O=new WeakMap,F=new WeakMap;var A,b,g,R,D,N,K,E,I,v,L,V,de;class pe{constructor(e,t,s,o){n(this,N);n(this,E);n(this,v);n(this,V);n(this,A,void 0);n(this,b,void 0);n(this,g,void 0);n(this,R,void 0);n(this,D,void 0);m(this,D,500),m(this,A,s),m(this,g,e),m(this,R,o),m(this,b,t)}get currentPosition(){return a(this,b)}get playerId(){return a(this,g)}get playerName(){return a(this,R)}async moveUponDiceRoll(e){S.showCurrentDiceRoll(e),p.addLoggerEntry(`Die rolled ${e}`);const t=a(this,b)===0,s=a(this,b)+e>100,o=e===6;if(t){const y=document.getElementById(`${a(this,g)}-player`);y.remove(),document.getElementById("snake-board").appendChild(y)}if(s){if(p.addLoggerEntry(`Die rolled ${e}. Die roll overflow, can't move ahead. ${d.currentPlayerDisplayName} needs ${100-a(this,b)} to win the game`),o){p.addLoggerEntry(`Die rolled ${e}, ${d.currentPlayerDisplayName} gets an extra die roll`),await i.sleep(1e3),c(this,E,I).call(this),c(this,v,L).call(this,a(this,g),!1);return}await i.sleep(2e3),c(this,E,I).call(this),c(this,v,L).call(this,a(this,g));return}p.addLoggerEntry(`${d.currentPlayerDisplayName} is moving on the board`);let l=0,u=setInterval(()=>{if(l++,_(this,b)._++,c(this,N,K).call(this),l>=e){const y=d.nodes[d.currentPlayer.currentPosition-1];if(clearInterval(u),y.hasSnakeHead()){p.addLoggerEntry(`Aww, ${d.currentPlayerDisplayName} got bit by a snake`),m(this,b,y.snake.tail),c(this,E,I).call(this),c(this,v,L).call(this,a(this,g)),setTimeout(()=>{c(this,N,K).call(this)},a(this,D));return}if(y.hasLadderBottom()){p.addLoggerEntry(`${d.currentPlayerDisplayName} climbed a ladder, gets an extra die roll`),m(this,b,y.ladder.top),c(this,E,I).call(this),c(this,v,L).call(this,a(this,g),!1),setTimeout(()=>{c(this,N,K).call(this)},a(this,D));return}if(o){p.addLoggerEntry(`Die rolled ${e}, ${d.currentPlayerDisplayName} gets an extra die roll`),c(this,E,I).call(this),c(this,v,L).call(this,a(this,g),!1);return}c(this,E,I).call(this),c(this,v,L).call(this,a(this,g))}},a(this,D))}}A=new WeakMap,b=new WeakMap,g=new WeakMap,R=new WeakMap,D=new WeakMap,N=new WeakSet,K=function(){const{x:e,y:t}=c(this,V,de).call(this,a(this,b)),s=document.getElementById(`${a(this,g)}-player`);s.style.bottom=`${t}px`,s.style.left=`${e}px`},E=new WeakSet,I=function(){const e=document.getElementById(`${a(d.currentPlayer,g)}-position`);e.innerText=a(d.currentPlayer,b)},v=new WeakSet,L=async function(e,t=!0){if(d.currentPlayer.currentPosition===100&&(p.addLoggerEntry(`Congratulations ${d.currentPlayerDisplayName}! You won the game`),w.disableControls=!0,w.showGameWinner(),await i.sleep(2e4),window.location.reload()),t){const u=(d.players.map(y=>a(y,g)).indexOf(e)+1)%d.players.length;d.currentPlayer=d.players[u],await i.sleep(1e3),w.showCurrentTurnText(),p.addLoggerEntry("Switching Turn")}p.addLoggerEntry(`${d.currentPlayerDisplayName}'s turn, ${d.currentPlayerDisplayName} can roll the die`),S.resetCurrentDiceRoll(),w.disableControls=!1},V=new WeakSet,de=function(e){const{horizontalOffsetInPx:t,nodeSizeInPx:s,rowSize:o,verticalOffsetInPx:l}=a(this,A),u=X=>X%o===0,y=X=>X%2===0;let G,z;return u(e)?G=e/o-1:G=Math.floor(e/o),y(G)?u(e)?z=o-1:z=e%o-1:u(e)?z=0:z=Math.abs(e%o-o),{x:s*z+t,y:s*G+l}};class he{static selectBoard(e,t){const s=document.getElementById("selected-board");e.forEach(o=>{o.classList.remove("selected")}),s.value=t.currentTarget.getAttribute("data-board"),t.currentTarget.classList.add("selected")}}const ee=()=>{const r=document.getElementById("player-count"),e=Math.abs(parseInt(r.value,10));if(isNaN(e))throw alert("Enter a valid number"),new Error("Halted game execution");if(e>4)throw alert("Max 4 players can play the game"),new Error("Halted game execution");if(e<=1)throw alert("Min 2 players can play the game"),new Error("Halted game execution");document.getElementById("game-init-step").classList.add("is-hidden"),document.getElementById("snake-game-step").classList.remove("is-hidden"),document.getElementById("snake-game-step").classList.add(`${document.getElementById("selected-board").value}-snake-board`);const t=Array.from(document.getElementsByClassName("player-name-input")).map(({value:s})=>i.capitalize(s));return new d(e,document.getElementById("selected-board").value,t)};document.addEventListener("DOMContentLoaded",()=>{let r=null;const e=document.getElementById("player-count");document.getElementById("start-game").addEventListener("click",()=>{r=ee()}),e.addEventListener("keypress",s=>{i.isEnterPressed(s)&&(r=ee())});const t=Array.from(document.getElementsByClassName("board-container"));t.forEach(s=>{s.addEventListener("click",he.selectBoard.bind(null,t))}),document.body.onkeyup=s=>{if(i.isSpacebarPressed(s)){if(w.disableControls)return;w.disableControls=!0,d.currentPlayer.moveUponDiceRoll(r.dice.rollDice())}},e.focus()});
